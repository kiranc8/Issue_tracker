<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>List Issues - Jira Style</title>
    <link rel="stylesheet" href="/css/issue-details.css" />
  </head>
  <body>
    <nav>
      <a href="/create-issue/<%= projectId %>"><button>Create Issue</button></a>
    </nav>
    <div class="filters-container">
      <label for="searchIssue">Search by Title/Description:</label>
      <input
        type="text"
        id="searchIssue"
        placeholder="Enter keywords"
        class="filter-input"
      />

      <label for="filterAuthor">Filter by Author:</label>
      <input
        type="text"
        id="filterAuthor"
        placeholder="Enter author's name"
        class="filter-input"
      />

      <!-- Add a dropdown for filtering by labels -->
      <label for="filterLabels">Filter by Labels:</label>
      <select id="filterLabels" multiple class="filter-input">
        <!-- Add label options here -->
        <option value="critical">Critical</option>
        <option value="minor">Minor</option>
        <option value="major">Major</option>
      </select>

      <button id="applyFilters" class="filter-button">
        Apply Filters/Search
      </button>
    </div>
    <div class="list-container">
        <% if (issues.length > 0) { %>
          <table border="1px solid black">
            <thead>
              <th>Title</th>
              <th>Description</th>
              <th>Author</th>
              <th>Label</th>
            </thead>
            <tbody>
              <% issues.forEach(function(issue) { %>
              <tr>
                <td><%= issue.title %></td>
                <td><%= issue.description %></td>
                <td><%= issue.author %></td>
                <td><%= issue.labels[0] %></td>
              </tr>
              <% }); %>
            </tbody>
          </table>
        <% } else { %>
            <div style="text-align: center;">
                <p style="font-weight: bold;">No issues</p>
              </div>
        <% } %>
      </div>
      
    <script>
      // Assign the projectId to a JavaScript variable
      const projectId = "<%= projectId %>";

      // Function to fetch filtered issues from the backend
      async function fetchFilteredIssues() {
        // Get filter criteria from the HTML elements
        const author = document.getElementById("filterAuthor").value;
        const searchQuery = document.getElementById("searchIssue").value;
        const selectedLabels = Array.from(
          document.getElementById("filterLabels").selectedOptions
        )
          .map((option) => option.value)
          .join(",");

        // Construct the URL with query parameters
        const url = `/issue/${projectId}?author=${author}&labels=${selectedLabels}&search=${searchQuery}`;

        try {
          const response = await fetch(url);

          if (!response.ok) {
            throw new Error(`HTTP error! Status: ${response.status}`);
          }

          window.location.href = url;
          // const data = await response.json();
          // Handle the data (e.g., update the UI with the filtered issues)
        } catch (error) {
          console.error("Fetch error:", error);
        }
      }

      // Add an event listener to the "Apply Filters/Search" button
      document
        .getElementById("applyFilters")
        .addEventListener("click", fetchFilteredIssues);
    </script>
  </body>
</html>
